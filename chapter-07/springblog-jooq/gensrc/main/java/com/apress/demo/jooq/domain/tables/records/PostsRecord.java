/*
 * This file is generated by jOOQ.
 */
package com.apress.demo.jooq.domain.tables.records;


import com.apress.demo.jooq.domain.enums.PostsPostStatus;
import com.apress.demo.jooq.domain.tables.Posts;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostsRecord extends UpdatableRecordImpl<PostsRecord> implements Record8<Integer, String, String, String, String, PostsPostStatus, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PUBLIC.POSTS.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.POSTS.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.POSTS.TITLE</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.POSTS.TITLE</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.POSTS.DESCRIPTION</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.POSTS.DESCRIPTION</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.POSTS.BODY</code>.
     */
    public void setBody(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.POSTS.BODY</code>.
     */
    public String getBody() {
        return (String) get(3);
    }

    /**
     * Setter for <code>PUBLIC.POSTS.SLUG</code>.
     */
    public void setSlug(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.POSTS.SLUG</code>.
     */
    public String getSlug() {
        return (String) get(4);
    }

    /**
     * Setter for <code>PUBLIC.POSTS.POST_STATUS</code>.
     */
    public void setPostStatus(PostsPostStatus value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.POSTS.POST_STATUS</code>.
     */
    public PostsPostStatus getPostStatus() {
        return (PostsPostStatus) get(5);
    }

    /**
     * Setter for <code>PUBLIC.POSTS.CREATED_ON</code>.
     */
    public void setCreatedOn(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>PUBLIC.POSTS.CREATED_ON</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>PUBLIC.POSTS.UPDATED_ON</code>.
     */
    public void setUpdatedOn(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>PUBLIC.POSTS.UPDATED_ON</code>.
     */
    public LocalDateTime getUpdatedOn() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, String, String, PostsPostStatus, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, String, String, String, PostsPostStatus, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Posts.POSTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Posts.POSTS.TITLE;
    }

    @Override
    public Field<String> field3() {
        return Posts.POSTS.DESCRIPTION;
    }

    @Override
    public Field<String> field4() {
        return Posts.POSTS.BODY;
    }

    @Override
    public Field<String> field5() {
        return Posts.POSTS.SLUG;
    }

    @Override
    public Field<PostsPostStatus> field6() {
        return Posts.POSTS.POST_STATUS;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Posts.POSTS.CREATED_ON;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Posts.POSTS.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public String component4() {
        return getBody();
    }

    @Override
    public String component5() {
        return getSlug();
    }

    @Override
    public PostsPostStatus component6() {
        return getPostStatus();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public String value4() {
        return getBody();
    }

    @Override
    public String value5() {
        return getSlug();
    }

    @Override
    public PostsPostStatus value6() {
        return getPostStatus();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedOn();
    }

    @Override
    public PostsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PostsRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public PostsRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public PostsRecord value4(String value) {
        setBody(value);
        return this;
    }

    @Override
    public PostsRecord value5(String value) {
        setSlug(value);
        return this;
    }

    @Override
    public PostsRecord value6(PostsPostStatus value) {
        setPostStatus(value);
        return this;
    }

    @Override
    public PostsRecord value7(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public PostsRecord value8(LocalDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public PostsRecord values(Integer value1, String value2, String value3, String value4, String value5, PostsPostStatus value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostsRecord
     */
    public PostsRecord() {
        super(Posts.POSTS);
    }

    /**
     * Create a detached, initialised PostsRecord
     */
    public PostsRecord(Integer id, String title, String description, String body, String slug, PostsPostStatus postStatus, LocalDateTime createdOn, LocalDateTime updatedOn) {
        super(Posts.POSTS);

        setId(id);
        setTitle(title);
        setDescription(description);
        setBody(body);
        setSlug(slug);
        setPostStatus(postStatus);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }
}
