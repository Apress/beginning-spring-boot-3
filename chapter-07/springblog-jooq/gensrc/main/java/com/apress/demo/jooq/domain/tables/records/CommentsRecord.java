/*
 * This file is generated by jOOQ.
 */
package com.apress.demo.jooq.domain.tables.records;


import com.apress.demo.jooq.domain.tables.Comments;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentsRecord extends UpdatableRecordImpl<CommentsRecord> implements Record7<Integer, Integer, String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PUBLIC.COMMENTS.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.COMMENTS.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.COMMENTS.POST_ID</code>.
     */
    public void setPostId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.COMMENTS.POST_ID</code>.
     */
    public Integer getPostId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>PUBLIC.COMMENTS.TITLE</code>.
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.COMMENTS.TITLE</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.COMMENTS.AUTHOR_NAME</code>.
     */
    public void setAuthorName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.COMMENTS.AUTHOR_NAME</code>.
     */
    public String getAuthorName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>PUBLIC.COMMENTS.BODY</code>.
     */
    public void setBody(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.COMMENTS.BODY</code>.
     */
    public String getBody() {
        return (String) get(4);
    }

    /**
     * Setter for <code>PUBLIC.COMMENTS.CREATED_ON</code>.
     */
    public void setCreatedOn(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.COMMENTS.CREATED_ON</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>PUBLIC.COMMENTS.UPDATED_ON</code>.
     */
    public void setUpdatedOn(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>PUBLIC.COMMENTS.UPDATED_ON</code>.
     */
    public LocalDateTime getUpdatedOn() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Comments.COMMENTS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Comments.COMMENTS.POST_ID;
    }

    @Override
    public Field<String> field3() {
        return Comments.COMMENTS.TITLE;
    }

    @Override
    public Field<String> field4() {
        return Comments.COMMENTS.AUTHOR_NAME;
    }

    @Override
    public Field<String> field5() {
        return Comments.COMMENTS.BODY;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Comments.COMMENTS.CREATED_ON;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Comments.COMMENTS.UPDATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getPostId();
    }

    @Override
    public String component3() {
        return getTitle();
    }

    @Override
    public String component4() {
        return getAuthorName();
    }

    @Override
    public String component5() {
        return getBody();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getPostId();
    }

    @Override
    public String value3() {
        return getTitle();
    }

    @Override
    public String value4() {
        return getAuthorName();
    }

    @Override
    public String value5() {
        return getBody();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedOn();
    }

    @Override
    public CommentsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public CommentsRecord value2(Integer value) {
        setPostId(value);
        return this;
    }

    @Override
    public CommentsRecord value3(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public CommentsRecord value4(String value) {
        setAuthorName(value);
        return this;
    }

    @Override
    public CommentsRecord value5(String value) {
        setBody(value);
        return this;
    }

    @Override
    public CommentsRecord value6(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public CommentsRecord value7(LocalDateTime value) {
        setUpdatedOn(value);
        return this;
    }

    @Override
    public CommentsRecord values(Integer value1, Integer value2, String value3, String value4, String value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentsRecord
     */
    public CommentsRecord() {
        super(Comments.COMMENTS);
    }

    /**
     * Create a detached, initialised CommentsRecord
     */
    public CommentsRecord(Integer id, Integer postId, String title, String authorName, String body, LocalDateTime createdOn, LocalDateTime updatedOn) {
        super(Comments.COMMENTS);

        setId(id);
        setPostId(postId);
        setTitle(title);
        setAuthorName(authorName);
        setBody(body);
        setCreatedOn(createdOn);
        setUpdatedOn(updatedOn);
    }
}
